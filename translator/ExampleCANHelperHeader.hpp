#include "structDefinitions.hpp"

//this file is setup to be systematically generated by a python program
namespace CANHelper::Messages
{
#ifdef BMSBMSMESSAGE
    class BMS::BMSMessage : public Msg_int16_2uint16_2uint8
    {
    public: //inline means no function call overhead (code in braces is simply copied and pasted into calling function). This class just adds aliases to the parent class functions.
        inline int16_t packCurrent() { return this->get0(); }
        inline uint16_t packInstVoltage() { return this->get1(); }
        inline uint16_t packSumV() { return this->get2(); }
        inline uint8_t packSOC() { return this->get3(); }
        inline uint8_t relayState() { return this->get4(); }
    };
#endif

    inline namespace driver_controls{
    class SpeedValCurrVal : public Msg_2float32
    {
    public:
        inline auto driverSetSpeed() { return this->get0(); } //need to check if auto is valid
        inline auto driverSetCurrent() { return this->get1(); }
    };
    }

    inline namespace driver_controls{
        class other
        {

        };
    }
}
